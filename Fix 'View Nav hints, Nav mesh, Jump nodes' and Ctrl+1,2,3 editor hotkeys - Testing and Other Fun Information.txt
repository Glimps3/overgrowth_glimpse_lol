Changed Files:
overgrowth-main\Source\Editors\map_editor.h
overgrowth-main\Source\Editors\map_editor.cpp
overgrowth-main\Source\GUI\dimgui\dimgui.cpp


Functionality: 
The checkboxes in the "View" tab in the editor ribbon for "Nav hints"/"Nav Region"/"Jump Nodes" now save state. So enabling
the "Edit gameplay objects" checkbox in the "Edit" tab will now only also re-enable the "View" checkboxes *if* they were
also enabled during the last time that "Edit gameplay objects" was enabled.

Also, the editor hotkeys "Ctrl+1"/"Ctrl+2"/"Ctrl+3" now do the exact same thing that the "Edit static meshes",
"Edit decals" and "Edit gameplay objects" checkboxes do respectively. 

For example: Before, enabling the "Edit static meshes" *checkbox" would set the following types to enabled:
_env_object, _group and _prefab.
Whereas pressing "Ctrl+1" would only enable _env_object. 
This is now corrected.



Implementation:
For the "View" tab checkbox stuff, I just made a bool each for "Nav hints"/"Nav Region"/"Jump Nodes" that save whether or
not they were previously enabled, and then whenever "Edit gameplay objects" is 'called' (either by the checkbox in the "Edit" tab or by pressing "Ctrl+3") it only enables the respective "View" tab checkbox if their respective bool is also true.

And for the "Ctrl+1"/"Ctrl+2"/"Ctrl+3" editor hotkeys stuff, I just made sure that whatever happens when the "Edit" tab
checkboxes are ticked will be the same stuff that happens when "Ctrl+1"/etc. is pressed.



Reason For Existing:
The "View" tab checkbox stuff exists because it was pretty poop to have to constantly re-disable those checkboxes every
time "Edit gameplay objects" was re-enabled, so yeah.

The editor hotkeys stuff exists because... Uh, truth be told I didn't even know that the hotkeys didn't do the same stuff
as the checkboxes until I looked at the code but it sure does make a whole lotta sense that they would work this way. 
I.E. that the hotkeys exist so the player doesn't have to go to checkboxes in the ribbon everytime they wanna enable/disable the editing of whatever for something-something faster work-flow reasons.

And honestly that's great but there's a few problems.
1.) Pretty sure the only place these hotkeys are even mentioned is on the wiki. So most players won't know about 'em.
2.) There's the previous problem of them functioning differently from the checkboxes which wasn't the most intuitive thing.
3.) When these hotkeys are enabled it'd be a whole lot better if there was a quick, coloured text pop-up in the bottom-right
corner of the screen that gives the player better confirmation that this change did actually take effect, because as of current, it's only really noticeable with hotspots/gameplay objects" etc. on account of them always having a bounding box thing around them that goes away when they're disabled, but for lights/normal objects/decals etc. this can only really be verified by trying to select them and seeing what happens which kinda defeats the point of the whole "something-something faster work-flow" stuff.

So yeah... It'd just be really cool if:
1.) The inputs for these hotkeys were displayed next to their respective checkbox.
2.) There was a lil' text pop-up in the bottom right of the screen that let the player know that their stuff has taken effect.

There's a decent chance I'll get around to doing this at some point, once I learn how anyways.
Particularly that stuff about the lil' text pop-up because yowza no idea how to do that and as far as I know there isn't a different example of that somewhere in the game I can look at.
Anywho those are problems for future me.



Testing:
• Tested on a large variety of levels, both pre-existing and newly created.

• Tested that the "View" tab checkbox stuff works as described above. *NOTE*: By "save state" I mean that, while within a level it'll behave as described above. However it doesn't save this stuff when exiting
a level or quitting the game, same way that the "Disable boxes around groups and prefabs" thing works. It's still a whole lot better than before, but not perfect.

• Tested that the editor hotkeys stuff also works as described above.